/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsersImport } from './routes/users'
import { Route as TrainingsImport } from './routes/trainings'
import { Route as PaymentsImport } from './routes/payments'
import { Route as CompetitionsImport } from './routes/competitions'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const UsersRoute = UsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const TrainingsRoute = TrainingsImport.update({
  id: '/trainings',
  path: '/trainings',
  getParentRoute: () => rootRoute,
} as any)

const PaymentsRoute = PaymentsImport.update({
  id: '/payments',
  path: '/payments',
  getParentRoute: () => rootRoute,
} as any)

const CompetitionsRoute = CompetitionsImport.update({
  id: '/competitions',
  path: '/competitions',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/competitions': {
      id: '/competitions'
      path: '/competitions'
      fullPath: '/competitions'
      preLoaderRoute: typeof CompetitionsImport
      parentRoute: typeof rootRoute
    }
    '/payments': {
      id: '/payments'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof PaymentsImport
      parentRoute: typeof rootRoute
    }
    '/trainings': {
      id: '/trainings'
      path: '/trainings'
      fullPath: '/trainings'
      preLoaderRoute: typeof TrainingsImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/competitions': typeof CompetitionsRoute
  '/payments': typeof PaymentsRoute
  '/trainings': typeof TrainingsRoute
  '/users': typeof UsersRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/competitions': typeof CompetitionsRoute
  '/payments': typeof PaymentsRoute
  '/trainings': typeof TrainingsRoute
  '/users': typeof UsersRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/competitions': typeof CompetitionsRoute
  '/payments': typeof PaymentsRoute
  '/trainings': typeof TrainingsRoute
  '/users': typeof UsersRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/competitions' | '/payments' | '/trainings' | '/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/competitions' | '/payments' | '/trainings' | '/users'
  id: '__root__' | '/' | '/competitions' | '/payments' | '/trainings' | '/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CompetitionsRoute: typeof CompetitionsRoute
  PaymentsRoute: typeof PaymentsRoute
  TrainingsRoute: typeof TrainingsRoute
  UsersRoute: typeof UsersRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CompetitionsRoute: CompetitionsRoute,
  PaymentsRoute: PaymentsRoute,
  TrainingsRoute: TrainingsRoute,
  UsersRoute: UsersRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/competitions",
        "/payments",
        "/trainings",
        "/users"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/competitions": {
      "filePath": "competitions.tsx"
    },
    "/payments": {
      "filePath": "payments.tsx"
    },
    "/trainings": {
      "filePath": "trainings.tsx"
    },
    "/users": {
      "filePath": "users.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
