version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: lara2001
      POSTGRES_DB: UsersCell  # mora jedan biti naveden, ostali se stvaraju putem SQL-a
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5433"
    networks:
      - microservice-moja-mreza
      
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - microservice-moja-mreza


  userscell:
    build:
      context: ./UsersCell/UsersCell
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_NAME=UsersCell
      - DB_USER=postgres
      - DB_PASSWORD=lara2001
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservice-moja-mreza

  trainingscell:
    build:
      context: ./TrainingsCell/TrainingsCell
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_NAME=TrainingsCell
      - DB_USER=postgres
      - DB_PASSWORD=lara2001
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservice-moja-mreza

  competitionscell:
    build:
      context: ./CompetitionsCell/CompetitionsCell
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_NAME=CompetitionsCell
      - DB_USER=postgres
      - DB_PASSWORD=lara2001
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservice-moja-mreza

  notificationscell:
    build:
      context: ./NotificationsCell/NotificationsCell
      dockerfile: Dockerfile
    ports:
      - "5005:5005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservice-moja-mreza

  paymentscell:
    build:
      context: ./PaymentsCell/PaymentsCell
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_NAME=PaymentsCell
      - DB_USER=postgres
      - DB_PASSWORD=lara2001
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservice-moja-mreza

  mediacell:
    build:
      context: ./MediaCell
      dockerfile: Dockerfile
    ports:
      - "5006:5006"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
      - DB_HOST=postgres
      - DB_PORT=5433
      - DB_NAME=MediaCell
      - DB_USER=postgres
      - DB_PASSWORD=lara2001
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - microservice-moja-mreza

  apigateway:
    build:
      context: ./APIGateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_RUNNING_IN_CONTAINER=true
    depends_on:
      userscell:
        condition: service_started
      trainingscell:
        condition: service_started
      competitionscell:
        condition: service_started
      notificationscell:
        condition: service_started
      paymentscell:
        condition: service_started
      mediacell:
        condition: service_started
    networks:
      - microservice-moja-mreza

volumes:
  pgdata:

networks:
  microservice-moja-mreza:
    external: true